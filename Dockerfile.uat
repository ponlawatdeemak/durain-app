# # Multi-stage build docker

# # 1st Stage
FROM node:20-alpine AS builder
WORKDIR /app

# COPY package*.json .
COPY package.json .
COPY yarn.lock .
RUN yarn install --frozen-lockfile

# COPY . .
COPY ./src ./src
COPY ./public ./public
COPY ./lib ./lib
COPY ./pages ./pages
COPY next.config.js .
COPY next-i18next.config.js .
COPY yarn.lock .
COPY package.json .
COPY postcss.config.js .
COPY tailwind.config.js .
COPY tsconfig.json .
COPY webapp.config.ts .
COPY .env.production .

ENV NODE_ENV=production
RUN yarn build

# # 2nd Stage
FROM node:20-alpine AS runner

# node image comes with rootless user "node" by default
WORKDIR /home/node
COPY --chown=root:node --chmod=755 --from=builder /app/public ./public
COPY --chown=root:node --chmod=755 --from=builder /app/.next ./.next
COPY --chown=root:node --chmod=755 --from=builder /app/node_modules ./node_modules
COPY --chown=root:node --chmod=755 --from=builder /app/package.json ./package.json
COPY --chown=root:node --chmod=755 --from=builder /app/next.config.js ./next.config.js
COPY --chown=root:node --chmod=755 --from=builder /app/next-i18next.config.js ./next-i18next.config.js

USER root

USER node
EXPOSE 3000
CMD ["yarn", "start"]
